name: e-School - Build and deploy

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  create-env-file:
    runs-on: ubuntu-latest

    steps:
    - name: Create env_file
      run: |
        echo "ENVIROMENT=PROD" > env_file
        echo "PROD_DB_ENGINE=${{ secrets.PROD_DB_ENGINE }}" >> env_file
        echo "PROD_DB_SERVER=${{ secrets.PROD_DB_SERVER }}" >> env_file
        echo "PROD_DB_PORT=${{ secrets.PROD_DB_PORT }}" >> env_file
        echo "PROD_DB_NAME=${{ secrets.PROD_DB_NAME }}" >> env_file
        echo "PROD_DB_USER=${{ secrets.PROD_DB_USER }}" >> env_file
        echo "PROD_DB_PASS=${{ secrets.PROD_DB_PASS }}" >> env_file
        
  build:
    runs-on: 'ubuntu-latest'

    steps:
    - uses: actions/checkout@v2

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Log in to registry
      uses: docker/login-action@v2
      with:
        registry: https://index.docker.io/v1/
        username: ${{ secrets.AzureAppService_ContainerUsername_ade84d5706ca49f794c0895e17efcf44 }}
        password: ${{ secrets.AzureAppService_ContainerPassword_7a7bd0f755134329aa6c5b42d313d1a9 }}

    - name: Build and push container image to registry
      uses: docker/build-push-action@v3
      with:
        push: true
        tags: index.docker.io/${{ secrets.AzureAppService_ContainerUsername_ade84d5706ca49f794c0895e17efcf44 }}/e-school:${{ github.sha }}
        file: ./Dockerfile

  deploy:
    runs-on: ubuntu-latest
    needs: [build, create-env-file]
    environment:
      name: 'production'
      url: ${{ needs.build.outputs.webapp-url }}

    steps:
    - name: Deploy to Azure Web App
      id: deploy-to-webapp
      uses: azure/webapps-deploy@v2
      with:
        app-name: 'e-School'
        slot-name: 'production'
        publish-profile: ${{ secrets.AzureAppService_PublishProfile_ea80e47e19d646bc8ac6b4d9ba6d1e94 }}
        images: 'index.docker.io/${{ secrets.AzureAppService_ContainerUsername_ade84d5706ca49f794c0895e17efcf44 }}/e-school:${{ github.sha }}'
